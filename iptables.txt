----------------------------------host firewall start------------------------------------
#ip segment
iptables -A INPUT -m iprange --src-range 193.168.19.105-193.168.19.120  -d 193.168.19.100 -j DROP
iptables -A INPUT -m iprange --dst-range 193.168.19.105-193.168.19.120  -s 193.168.19.100 -j DROP
#ip
iptables -A INPUT -s 193.168.19.105  -d 193.168.19.100 -j DROP
iptables -A INPUT ! -s 193.168.19.105  ! -d 193.168.19.100 -j DROP
iptables -A INPUT -s 193.168.19.105,193.168.19.111 -d 193.168.19.100 -j DROP
iptables -A INPUT -s 192.158.1.0/24 -d 193.168.19.100 -j DROP
#delete chain rule
iptables -D INPUT 1
#list chain and rule
iptables -L -nv
#prot
iptables -A INPUT -p tcp --dport 80 -j DROP
iptables -A INPUT -p tcp [-m tcp] --dport 80 -j DROP
iptables -A INPUT -p tcp ! --dport 80 -j DROP
iptables -A INPUT -s 193.168.19.105 -p tcp --sport 80 -j DROP
#prot segment
iptables -A INPUT -p tcp --dport 80:100 -j DROP
iptables -A INPUT -p tcp --dport :100 -j DROP
iptables -A INPUT -p tcp --dport 80: -j DROP
#multiple port
iptables -A INPUT -s 193.168.19.105 -p tcp -m multiport --dport 22,36,80 -j DROP
iptables -A INPUT -s 193.168.19.105 -p tcp -m multiport --dport 22,36:80 -j DROP
#change policy
iptables -P INPUT DROP
#clean chain rule
iptables -t filter -F [chain]
#customize new chain
iptables -t filter -N IN_RISING
#link customizing chain
iptables -t filter -A INPUT -p tcp --dport 80 -j IN_RISING
#rname the customizing chain
iptables -E IN_RISING RISING
#delete the customizing chain
iptables -X IN_RISING
#data inputting from which network car 
iptables -A INPUT -p icmp -i eth0 -j DROP
iptables -A INPUT -p icmp ! -i eth0 -j DROP
#data outputting from which network car 
iptables -A OUTPUT -p icmp -o eth0 -j DROP
iptables -A OUTPUT -p icmp ! -o eth0 -j DROP
#data include xxx how to do
iptables -A INPUT -m string --algo bm --string "xxx" -j DROP
iptables -A INPUT -m string --algo kmp --string "xxx" -j DROP
#time
iptables -A OUTPUT -p tcp --dport 80 -m time --timestart 09:00:00 --timestop 18:00:00 -j DROP
iptables -A OUTPUT -p tcp --dport 443 -m time --timestart 09:00:00 --timestop 18:00:00 -j DROP
iptables -A OUTPUT -p tcp --dport 80 -m time --weekdays 6,7 -j DROP
iptables -A OUTPUT -p tcp --dport 80 -m time --timestart 09:00:00 --timestop 18:00:00 --weekdays 6,7 -j DROP
iptables -A OUTPUT -p tcp --dport 80 -m time --monthdays 22,23 -j DROP
iptables -A OUTPUT -p tcp --dport 80 -m time --weekdays 5 --monthdays 22,23,24,25,26,27,28 -j DROP
iptables -A OUTPUT -p tcp --dport 80 -m time --datestart 2021-10-26 --datestop 2021-10-30 -j DROP
--monthdays and --weekdays can use ! parameter
#Limit the number of links that each ip address can connect to the server side at the same time. 
#Note: we donâ€™t need to specify the ip. The default is for "each client ip", 
#that is, the limit on the number of concurrent connections for a single ip
iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 2 -j DROP
iptables -I INPUT -p tcp --dport 22 -m connlimit ! --connlimit-above 2 -j ACCEPT
iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 2 --connlimit-mask 24 -j DROP
iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 10 --connlimit-mask 27 -j DROP
#The number of incoming packets per unit time
iptables -I INPUT -p icmp -m limit --limit 10/minute -j ACCEPT
iptables -I INPUT -p icmp -j DROP
iptables -I INPUT -p icmp -m limit --limit-burst 3 --limit 10/minute -j ACCEPT
--limit /second /minute /hour /day 
--limit-burst default 5
#The flag bit used to match the tcp header of the message
iptables -I INPUT -p tcp -m tcp --dport 22 --tcp-flags SYN,ACK,FIN,RST,PSH,URG SYN -j DROP
iptables -I INPUT -p tcp -m tcp --dport 22 --tcp-flags SYN,ACK,FIN,RST,PSH,URG SYN,ACK -j DROP
iptables -I INPUT -p tcp -m tcp --dport 22 --tcp-flags ALL SYN -j DROP
iptables -I INPUT -p tcp -m tcp --dport 22 --syn -j DROP
#-m icmp
iptables -I INPUT -p icmp -j DROP
iptables -I INPUT -p icmp [-m icmp] --icmp--type 8/0 -j DROP
iptables -I INPUT -p icmp [-m icmp] --icmp--type 8 -j DROP
iptables -I INPUT -p icmp [-m icmp] --icmp--type "echo-request" -j DROP
#-m state
iptables -I INPUT -m state --state NEW,ESTABLISHED,RELATED,INVALID,UNTRACKED -j DROP
#-j ACCEPT DROP REJECT
iptables -I INPUT 2 -j REJECT --reject-with icmp-host-unreachable
icmp-net-unreachable
icmp-host-unreachable
icmp-port-unreachable default
icmp-proto-unreachable
icmp-net-prohibited
icmp-host-prohibited
icmp-admin-prohibited
#-j LOG  Record information about matched packets
iptables -I INPUT -p tcp --dport 22  -j LOG
--log-level  emerg,alert,crit,error,warning,notice,info,debug
--log-prefix add tag
iptables -I INPUT -p tcp --dport 22 -m state --state NEW -j LOG --log-prefix "want-in-from-port-22"
#-j SNAT DNAT
A:192.168.1.147  public network ip
B:192.168.1.146  public network ip
 :10.1.0.3		 private network ip
C:10.1.0.1		 private network ip
D:10.1.0.6		 private network ip
iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 192.168.1.146
iptables -t nat -I PREROUTING -d 192.168.1.146 -p tcp --dport 3389 -j DNAT --to-destination 10.1.0.6:3389
iptables -t nat -I PREROUTING -d 192.168.1.146 -p tcp --dport 801 -j DNAT --to-destination 10.1.0.1:80
iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 192.168.1.146
#-j MASQUERADE like SNAT but not need to specify ip.In terms of efficiency, MASQUERADE is not as good as SNAT
iptables -t nat -I POSTROUTING -s 10.1.0.0/16 -o eth0 -j SNAT
#-j REDIRECT can map port in local
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
----------------------------------host firewall end------------------------------------
----------------------------------network firewall start------------------------------------
A:192.168.1.147  public network ip
B:192.168.1.146  public network ip
 :10.1.0.3		 private network ip
C:10.1.0.1		 private network ip
D:10.1.0.6		 private network ip
iptables -A FORWARD -j DROP
iptables -I FORWARD -s 10.1.0.0/16 -p tcp --dport 80 -j DROP
iptables -I FORWARD -d 10.1.0.0/16 -p tcp --sport 80 -j DROP
iptables -I FORWARD -s 10.1.0.0/16 -p tcp --dport 22 -j DROP
iptables -I FORWARD -d 10.1.0.0/16 -p tcp --sport 22 -j DROP
iptables -I FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
----------------------------------network firewall end------------------------------------

https://home.regit.org/netfilter-en/using-nfqueue-and-libnetfilter_queue/
